
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/pagerview/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

RNCViewPagerProps::RNCViewPagerProps(
    const PropsParserContext &context,
    const RNCViewPagerProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    scrollEnabled(convertRawProp(context, rawProps, "scrollEnabled", sourceProps.scrollEnabled, {true})),
    layoutDirection(convertRawProp(context, rawProps, "layoutDirection", sourceProps.layoutDirection, {RNCViewPagerLayoutDirection::Ltr})),
    initialPage(convertRawProp(context, rawProps, "initialPage", sourceProps.initialPage, {0})),
    orientation(convertRawProp(context, rawProps, "orientation", sourceProps.orientation, {RNCViewPagerOrientation::Horizontal})),
    offscreenPageLimit(convertRawProp(context, rawProps, "offscreenPageLimit", sourceProps.offscreenPageLimit, {0})),
    pageMargin(convertRawProp(context, rawProps, "pageMargin", sourceProps.pageMargin, {0})),
    overScrollMode(convertRawProp(context, rawProps, "overScrollMode", sourceProps.overScrollMode, {RNCViewPagerOverScrollMode::Auto})),
    overdrag(convertRawProp(context, rawProps, "overdrag", sourceProps.overdrag, {false})),
    keyboardDismissMode(convertRawProp(context, rawProps, "keyboardDismissMode", sourceProps.keyboardDismissMode, {RNCViewPagerKeyboardDismissMode::None})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName RNCViewPagerProps::getDiffPropsImplementationTarget() const {
  return "RNCViewPager";
}

folly::dynamic RNCViewPagerProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = RNCViewPagerProps();
  const RNCViewPagerProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const RNCViewPagerProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (scrollEnabled != oldProps->scrollEnabled) {
    result["scrollEnabled"] = scrollEnabled;
  }
    
  if (layoutDirection != oldProps->layoutDirection) {
    result["layoutDirection"] = toDynamic(layoutDirection);
  }
    
  if (initialPage != oldProps->initialPage) {
    result["initialPage"] = initialPage;
  }
    
  if (orientation != oldProps->orientation) {
    result["orientation"] = toDynamic(orientation);
  }
    
  if (offscreenPageLimit != oldProps->offscreenPageLimit) {
    result["offscreenPageLimit"] = offscreenPageLimit;
  }
    
  if (pageMargin != oldProps->pageMargin) {
    result["pageMargin"] = pageMargin;
  }
    
  if (overScrollMode != oldProps->overScrollMode) {
    result["overScrollMode"] = toDynamic(overScrollMode);
  }
    
  if (overdrag != oldProps->overdrag) {
    result["overdrag"] = overdrag;
  }
    
  if (keyboardDismissMode != oldProps->keyboardDismissMode) {
    result["keyboardDismissMode"] = toDynamic(keyboardDismissMode);
  }
  return result;
}
#endif

} // namespace facebook::react
