name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install

    - name: Setup Expo and EAS CLI
      run: |
        npm install -g @expo/cli eas-cli

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk: 25.2.9519653

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Generate Keystore
      run: |
        echo "Generating Android Keystore..."
        # 고유한 Keystore 파일명 생성 (타임스탬프 포함)
        KEYSTORE_NAME="keystore-$(date +%s).keystore"
        KEY_ALIAS="key-alias-$(date +%s)"
        echo "Using keystore: $KEYSTORE_NAME"
        echo "Using alias: $KEY_ALIAS"
        # 새로운 Keystore 생성
        keytool -genkey -v -keystore "$KEYSTORE_NAME" -alias "$KEY_ALIAS" -keyalg RSA -keysize 2048 -validity 10000 -storepass android123 -keypass android123 -dname "CN=Gimpo E-Campus, OU=IT, O=Gimpo City Management Corporation, L=Gimpo, S=Gyeonggi, C=KR"
        # 표준 이름으로 복사
        cp "$KEYSTORE_NAME" my-release-key.keystore
        echo "Keystore generated successfully"

    - name: Configure Gradle
      run: |
        echo "Configuring Gradle..."
        mkdir -p android/app
        echo "MYAPP_RELEASE_STORE_FILE=my-release-key.keystore" >> android/gradle.properties
        echo "MYAPP_RELEASE_KEY_ALIAS=my-key-alias" >> android/gradle.properties
        echo "MYAPP_RELEASE_STORE_PASSWORD=android123" >> android/gradle.properties
        echo "MYAPP_RELEASE_KEY_PASSWORD=android123" >> android/gradle.properties

    - name: Build APK with Expo
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: |
        echo "Building APK with Expo..."
        # Expo prebuild로 네이티브 프로젝트 생성
        npx expo prebuild --platform android --clear
        echo "Prebuild completed"
        
        # Gradle로 APK 빌드
        cd android
        chmod +x gradlew
        ./gradlew assembleRelease --stacktrace --info
        echo "APK built successfully"

    - name: Prepare APK artifact
      run: |
        echo "Preparing APK artifact..."
        mkdir -p artifacts
        cp android/app/build/outputs/apk/release/app-release.apk artifacts/gimpo-e-campus.apk
        echo "APK prepared successfully: gimpo-e-campus.apk"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: artifacts/gimpo-e-campus.apk
        if-no-files-found: warn